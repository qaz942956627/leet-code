能构造回文，证明每个字符是偶数个，每次访问只要是偶数个就+2，最后可以在中间加一个奇数个的字符，能加的条件是一直+2后的结果小于字符串的长度。

* 

```
class Solution {
    public int longestPalindrome(String s) {
     int[] ins = new int[128];
     char[] chs = s.toCharArray();
     int res = 0;
     for(char now:chs){
         ins[now-0]++;
         if(ins[now-0]%2==0){
             res += 2;
         }
     }
     if(res<chs.length){
         return res+1;
     }
     return res;
    }
}
```

